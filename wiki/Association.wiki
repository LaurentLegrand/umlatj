= Overview =

An Association is a link between two [Classifier]s.

= Usage =

The annotation @org.umlatj.Association must be placed on a Java field of a class annotated
by @org.umlatj.Package.
The field must be of type org.umlatj.kernel.Association.Binary


= Sample =

== Design ==

Assuming the following one-to-many association between Folder and Document:

http://umlatj.googlecode.com/svn/wiki/Association.content/FolderContainsDocuments.png

== Implementation ==

The corresponding implementation will be:

=== Folder.java ===
{{{
package wiki;

import java.util.ArrayList;
import java.util.Collection;

import org.umlatj.kernel.Classifier;
import org.umlatj.kernel.Property;

@Classifier
public class Folder {

	@Property
	Collection<Document> documents = new ArrayList<Document>();

}
}}}

=== Document.java ===
{{{
package wiki;

import org.umlatj.kernel.Classifier;
import org.umlatj.kernel.Property;

@Classifier
public class Document {
	
	@Property
	Folder folder;

}
}}}

=== MyPackage.java === 

{{{
package wiki;

import org.umlatj.kernel.Association;
import org.umlatj.kernel.Package;
import org.umlatj.kernel.Association.Binary;
import org.umlatj.kernel.Association.End;

@Package
public class MyPackage {

	@Association( { @End("folder"), @End("documents") })
	private Binary<Folder, Document> folderContainsDocuments;

	public Binary<Folder, Document> getFolderContainsDocuments() {
		return folderContainsDocuments;
	}
}
}}}

As usual, the association ends are represented by fields in classes Folder and Document.

And The association is represented by the field called `folderContainsDocument`.

Note that the order in the declaration of the @End and in the generics looks like what we
have in the diagram: `Folder folder <--> documents Document`.  

= Runtime expectations =


